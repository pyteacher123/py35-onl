ЗАДАНИЕ 1
Создать класс Alphabet, в который в инициализаторе будут передаваться параметры:
end - str и lower - bool (по дефолту True)
Объекты класса должны быть итерабельными и на каждой итерации возвращать букву из латинского
алфавита до тех пор, пока не будет достигнута буква, которая передана в инициализатор в атрибуте end.
Если атрибут lower=True, то возвращаем буквы в маленьком регистре, если False, то в большом

Пример использования класса:
for letter in Alphabet(end="d", lower=True):
    print(letter)

Программа на экран выведет: 
a
b
c
d
То есть на каждой итерации будет выдаваться буква из алфавита в соответствии с заданным регистром.


ЗАДАНИЕ 2
Создать класс Stack, который будет соответствовать структуре данных стек (LIFO - last in first out)
У класса должны быть методы:
push(self, element) - добавляет элемент в стек
pop(self) - выдаёт последний элемент из стека и удаляет его в стеке. Если стек пустой, то 
возвращает None
is_empty(self) - возвращает True, если стек пустой, False - если нет
peek(self) - возвращает верхушку стека (последний добавленный элемент), в ином случае возвращает None

Использовать этот класс Stack для решения следующей задачи:
На вход даёт строка из скобок "[](){}" 
Реализовать функцию (обычную, НЕ метод в классе), которая на вход принимает строку из скобок И
возвращает True, если все скобки закрыты, False - если нет
Пример:
Input: "([]){}"
Output: True

Input: "(])"
Output: False


ЗАДАНИЕ 3
Создать класс LinkedList, который будет являться структурой данных "связанный список"
У класса LinkedList должно быть свойство head (при инициализации None), которое является
ссылкой на первый объект в списке.
Также класс LinkedList должен иметь методы:
1. append(self, element) - добавляет новый элемент в LinkedList
2. reverse(self) - меняет порядок списка, то есть последний элемент текущего списка должен стать 
первым элементом нового списка и так далее
3. println(self) - выводит на экран список из всех значений атрибута data для каждого элемента
в порядке того, как эти элименты стоят в списке

Также LinkedList должен поддерживать операции len(linked_lst) - возвращать количество элементов в списке
for i in linked_lst:
    print(i) # на каждой итерации возвращать по одному элементу списка


Также создать класс Element, у которого должны быть два свойства next (при инициализации None)
и data, которое задаётся при инициализации и хранит объект класса int.
Атрибут data сделать ввиде метода-свойства, в котором при инициализации проверять, что data находится в 
range(0, 10000), если нет, то генерировать ошибку IncorrectDataError
Также объекты класса должны поддерживать операции ==, !=, >=, <=, >, < - сравнивать по атрибуту data


ЗАДАНИЕ 4
