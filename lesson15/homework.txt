ЗАДАНИЕ 1
Создать класс Contact, у которого должны быть атрибуты email, phone, first_name, last_name
Сделать валидации, что email - строка, содержащая символ @ и правая часть находится в списке из:
gmail.com, yandex.ru, ya.ru, yahoo.com

phone - номер телефона начинается с символа +, код страны находится в списке 
375, 48, 374

first_name, last_name - строки, начинающиеся с большой буквы и длиной от 5 до 15  символов

Все проверки реализовать через property


ЗАДАНИЕ 2
Создать класс Message, который принимает атрибут text, который является текстом
какого-то сообщения. Также в инициализаторе у класса задать атрибут created_at, в который 
сохранить текущий timestamp (unix time)
Создать класс Song, который принимает два атрибута: name - название песни и author - автор песни
Также в инициализаторе у класса задать атрибут created_at, в который 
сохранить текущий timestamp (unix time)

Создать класс-дескриптор Censored, который будет валидировать поля name и text у этих классов.
Правило валидации: если в тексте сообщения или названии песни найдётся слово fuck (в любом регистре), 
то перед присваиванием этого текста атрибуту класса, дескриптор заменяет это слово на ****


Пример структуры программы:
class Censored:
    # Тут реализовать протокол дескриптора


class Song:
    name = Censored()

    def __init__(self, name, author):
        self.name = name
        self.author = author
        # также добавить created_at


class Message:
    text = Censored()

    def __init__(self, text):
        self.text = text
        # также добавить created_at
    

m1 = Message("Fuck sofof")
print(m1.text) # Выведет "**** sofof"

m2 = Message("Hello World")
print(m2.text) # Выведет  "Hello World"
