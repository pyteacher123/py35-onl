ЗАДАНИЕ 1
Создайте класс Student, содержащий поля: фамилия и имя, номер группы, 
успеваемость (массив из пяти элементов, каждый элемент число от 1 до 10). 
Проверить что фамилия и имя строки через property. Если не строка, 
вызываем ошибку ValidationError.

Создать класс School, содержащий список учеников (изначально пустой):

Добавить возможно для добавления студентов в школу (метод add_student)
Добавить возможность вывода фамилий и номеров групп студентов, имеющих оценки, 
равные только 5 или 6. Метод (get_best_students) 
Добавить возможность вывода учеников заданной группы (get_students(self, group_number))
Добавить возможность вывода учеников претендующих на автомат(средний балл >= 7) 
Метод (get_students_without_exams)


ЗАДАНИЕ 2
Создать класс Array, который должен работать как встроенный класс List, только хранить объекты
определённого типа (тип задаётся при создании объекта Array).


ЗАДАНИЕ 3
Создать программу, в которой определить класс Point, который содержит две координаты x, y, а также 
поддерживает метод для преобразования координат в tuple.
Создать класс Line, который содержит свойства color, point_a, point_b
также он должен поддерживать метод length, который вернёт длину линии
Создать класс Triangle, который содержит свойства  color, point_a, point_b, point_c
также он должен поддерживать метод perimetr, который вернёт периметр треугольника
Создать класс Circle, который содержит свойства color, centre, radius
также он должен поддерживать метод length, который вернёт длину окружности
Создать класс Rectangle, который содержит свойства color, point_a, point_b, point_c, point_d
также он должен поддерживать метод perimetr, который вернёт периметр прямоугольника.
Также все классы должны поддерживать метод draw, который вернёт словарь, состоящий из всех свойств объекта.


ЗАДАНИЕ 3
Написать библиотеку для сериализации списка, состоящего из словарей python в форматы excel, csv, json, 
то есть библиотека должна предоставлять класс Serializer, формат, в который надо преобразовать
словарь, а также название файла, в который сохранить результат. 
класс Serializer должен иметь метод execute, который примет список с входными данными и выполнит сериализацию.

ПРИМЕР ПРОГРАММЫ:

from serailizer_lib import Serializer, providers

serialize = Serializer(providers.CSVProvider, "output.csv")
data = [
    {
        "Name": "Max",
        "Last_Name": "Perkovskiy",
        "Age": 24
    },
    {
        "Name": "Joe",
        "Last_Name": "Daw",
        "Age": 35
    }
]
res = serialize.execute(data)
print(res) # Вернёт True, если сериализация выполнена успешно и запишет данные в файл.
